.data

a:   .word16 5, 0x01a1, 0x2f, 17, 0x2fe0, 1, 0x96a4, 0x2f, 3, 0x2f, 5, 0x01a1
     .word16 5, 0x01a1, 0x2f, 17, 0x2fe0, 1, 0x96a4, 0x2f, 3, 0x2f, 5, 0x01a1
     .word16 5, 0x01a1, 0x2f, 17, 0x2fe0, 1, 0x96a4, 0x2f, 3, 0x2f, 5, 0x01a1
     .word16 5, 0x01a1, 0x2f, 17, 0x2fe0, 1, 0x96a4, 0x2f, 3, 0x2f, 5, 0x01a1
     .word16 5, 0x01a1, 0x2f, 17, 0x2fe0, 1, 0x96a4, 0x2f, 3, 0x2f, 5, 0x01a1
     .word16 5, 0x01a1, 0x2f, 17, 0x2fe0, 1, 0x96a4, 0x2f, 3, 0x2f, 5, 0x01a1
     .word16 5, 0x01a1, 0x2f, 17, 0x2fe0, 1, 0x96a4, 0x2f, 3, 0x2f, 5, 0x01a1
     .word16 5, 0x01a1, 0x2f, 17, 0x2fe0, 1, 0x96a4, 0x2f, 3, 0x2f, 5, 0x01a1
     .word16 5, 0x01a1, 0x2f, 17
val: .byte 0x2f
res: .space 1

.code 

main:
    daddui r1, r0, 200 ; r1 counter register
    dadd   r2, r0, r0 ; r2 index register  (to increment by 1 in order to load byte per byte)
    dadd   r3, r0, r0 ; r3 result register (to increment by 1)
    lbu r4, val(r0) ; r4=byte to search

loop:
    lbu r5, a(r2)
    bne r4, r5, next
    daddi r3, r3, 1
next:
    daddi r1, r1, -1
    daddi r2, r2, 1
    bnez r1, loop

    HALT; end
