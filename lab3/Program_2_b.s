.data

v1:   .double 1.1, 2.2, 3.3, 4.4, 5.5, 6.6, 7.7, 8.8, 9.9, 10.10
      .double 1.1, 2.2, 3.3, 4.4, 5.5, 6.6, 7.7, 8.8, 9.9, 10.10
      .double 1.1, 2.2, 3.3, 4.4, 5.5, 6.6, 7.7, 8.8, 9.9, 10.10
      .double 1.1, 2.2, 3.3, 4.4, 5.5, 6.6, 7.7, 8.8, 9.9, 10.10
v2:   .double 1.1, 2.2, 3.3, 4.4, 5.5, 6.6, 7.7, 8.8, 9.9, 10.10
      .double 1.1, 2.2, 3.3, 4.4, 5.5, 6.6, 7.7, 8.8, 9.9, 10.10
      .double 1.1, 2.2, 3.3, 4.4, 5.5, 6.6, 7.7, 8.8, 9.9, 10.10
      .double 1.1, 2.2, 3.3, 4.4, 5.5, 6.6, 7.7, 8.8, 9.9, 10.10
v3:   .double 1.1, 2.2, 3.3, 4.4, 5.5, 6.6, 7.7, 8.8, 9.9, 10.10
      .double 1.1, 2.2, 3.3, 4.4, 5.5, 6.6, 7.7, 8.8, 9.9, 10.10
      .double 1.1, 2.2, 3.3, 4.4, 5.5, 6.6, 7.7, 8.8, 9.9, 10.10
      .double 1.1, 2.2, 3.3, 4.4, 5.5, 6.6, 7.7, 8.8, 9.9, 10.10
v4:   .double 1.1, 2.2, 3.3, 4.4, 5.5, 6.6, 7.7, 8.8, 9.9, 10.10
      .double 1.1, 2.2, 3.3, 4.4, 5.5, 6.6, 7.7, 8.8, 9.9, 10.10
      .double 1.1, 2.2, 3.3, 4.4, 5.5, 6.6, 7.7, 8.8, 9.9, 10.10
      .double 1.1, 2.2, 3.3, 4.4, 5.5, 6.6, 7.7, 8.8, 9.9, 10.10
v5: .space 320
v6: .space 320
v7: .space 320
.code 

; PROGRAM program_2_b
; 858 RAW stalls
; 158 WAR stalls
; 80 structural stalls
; 0 branch taken stalls

main:            
    daddi r2, r0, 0   
    daddi r3, r0, 0   
    daddi r1, r0, 39 

    l.d f2, v2(r2) ; f2 = v2[i]     
    l.d f3, v3(r2) ; f3 = v3[i]
    l.d f4, v4(r2) ; f4 = v4[i]      
    l.d f1, v1(r2) ; f5 = v1[i]  

    mul.d f8, f2, f3 ; f8 = v2*v3
    add.d f5, f1, f8 ; f5 = v1 + v2*v3   
    mul.d f6, f5, f4 ; f6 = (v1+v2*v3)*v5 
    div.d f7, f6, f2 ;              

loop:
    daddi r2, r2, 8   
    l.d f2, v2(r2) ; f2 = v2[i]       
    l.d f3, v3(r2) ; f3 = v3[i]
    mul.d f8, f2, f3 ; f8 = v2*v3
    l.d f4, v4(r2) ; f4 = v4[i]      
    l.d f1, v1(r2) ; f5 = v1[i]  
    s.d f5, v5(r3)   
    add.d f5, f1, f8 ; f5 = v1 + v2*v3         
    s.d f6, v6(r3)  
    mul.d f6, f5, f4 ; f6 = (v1+v2*v3)*v5 
    daddi r1, r1, -1                 
    s.d f7, v7(r3) 
    div.d f7, f6, f2 ;
    bnez r1, loop   
    daddi r3, r3, 8   

    s.d f5, v5(r2)           
    s.d f6, v6(r2)                 
    s.d f7, v7(r2)                  

    HALT